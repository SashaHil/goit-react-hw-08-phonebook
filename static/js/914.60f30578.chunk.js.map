{"version":3,"file":"static/js/914.60f30578.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Filter/Filter.styled.js","components/LoginForm/LoginForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  ErrorMessage as FormikErrorMessage,\n  Field as FormikField,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  padding-top: 80px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: red;\n`;\n\nexport const Field = styled(FormikField)`\n  @media screen and (min-width: 320px) {\n    min-width: 220px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n\n  border-right: none;\n  border-bottom: 2px solid rgb(33, 150, 243);\n  border-left: none;\n  border-top: none;\n\n  outline: none;\n\n  background-color: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  color: white;\n\n  &:focus {\n    border-bottom: 2px solid rgba(33, 243, 215, 0.6);\n    border-left: none;\n    border-top: none;\n\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\n  @media screen and (min-width: 320px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  min-width: 300px;\n  color: white;\n`;\n\nexport const Button = styled.button`\n  @media screen and (min-width: 320px) {\n    padding: 5px;\n\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 5px 10px;\n\n    font-size: 16px;\n  }\n\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: #2196f3;\n  color: #ffffff;\n\n  border-radius: 4px;\n  border: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const AdditionalFormFiled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  @media screen and (min-width: 320px) {\n    min-width: 225px;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n\n  margin-bottom: 15px;\n\n  border-right: none;\n  border-bottom: 2px solid rgb(33, 150, 243);\n  border-left: none;\n  border-top: none;\n\n  outline: none;\n\n  background-color: transparent;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  color: white;\n\n  &:focus {\n    border-bottom: 2px solid rgba(33, 243, 215, 0.6);\n    border-left: none;\n    border-top: none;\n\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  @media screen and (min-width: 320px) {\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 130px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const AdditionalLoginRegisterFiled = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  ErrorMessage,\n  Field,\n  Button,\n  Label,\n  AdditionalFormFiled,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { CgAdd, CgPhone, CgUser } from 'react-icons/cg';\n\nconst InputSchema = Yup.object().shape({\n  name: Yup.string().required('Must be required'),\n  number: Yup.string().required('Must be required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isDublicate = ({ name, number }) => {\n    const refName = name.toLowerCase().trim();\n    const refNumber = number.trim();\n\n    const dublicate = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === refName || contact.number === refNumber\n    );\n    return Boolean(dublicate);\n  };\n\n  const onAddContact = ({ name, number }) => {\n    if (isDublicate({ name, number })) {\n      return alert(`${name} or ${number} is already in contacts.`);\n    }\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={InputSchema}\n      onSubmit={(values, { resetForm }) => {\n        onAddContact({ ...values });\n        resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          <AdditionalFormFiled>\n            <CgUser size=\"18\" />\n            Name\n          </AdditionalFormFiled>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            autoComplete=\"off\"\n            required\n          />\n        </Label>\n\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <Label>\n          <AdditionalFormFiled>\n            <CgPhone size=\"18\" />\n            Number\n          </AdditionalFormFiled>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            autoComplete=\"off\"\n            required\n          />\n        </Label>\n\n        <ErrorMessage name=\"number\" component=\"div\" />\n        <Button type=\"submit\">\n          Add contact\n          <CgAdd\n            size=\"18\"\n            style={{\n              fill: 'white',\n              verticalAlign: 'middle',\n              marginLeft: '5px',\n            }}\n          />\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import {\n  AdditionalField,\n  Button,\n  Contact,\n} from 'components/ContactList/ContactList.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { CgTrash, CgUser, CgPhone, CgEditMarkup } from 'react-icons/cg';\nimport { ListItem, Name, Number } from './ContactList.styled';\n\nexport const ContactList = ({ isOpenModal }) => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={id}>\n              <Contact>\n                <Name>\n                  <CgUser size=\"18\" />\n                  {name}\n                </Name>\n                <Number>\n                  <CgPhone size=\"18\" />\n                  {number}\n                </Number>\n              </Contact>\n              <AdditionalField>\n                <Button\n                  disabled={isLoading}\n                  type=\"button\"\n                  onClick={() => isOpenModal(name, number, id)}\n                >\n                  <CgEditMarkup size=\"18\" />\n                </Button>\n                <Button\n                  disabled={isLoading}\n                  type=\"button\"\n                  onClick={() => handleDelete(id)}\n                >\n                  <CgTrash size=\"18\" />\n                </Button>\n              </AdditionalField>\n            </ListItem>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.4);\n\n  padding: 20px;\n`;\n\nexport const Modal = styled.div`\n  @media screen and (min-width: 320px) {\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n\n  position: relative;\n\n  border-radius: 10px;\n\n  background-image: linear-gradient(\n      to right,\n      rgba(47, 48, 58, 0.4),\n      rgba(47, 48, 58, 0.4)\n    ),\n    url(https://st.depositphotos.com/3322093/4547/i/950/depositphotos_45475147-stock-photo-yellow-pages-phone-book.jpg);\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n\n  max-width: 100%;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  @media screen and (min-width: 320px) {\n    font-size: 14px;\n\n    min-width: 205px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n\n    min-width: 300px;\n  }\n\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  color: white;\n`;\n\nexport const BtnClose = styled.button`\n  cursor: pointer;\n\n  margin: 0;\n\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  color: white;\n  background-color: transparent;\n\n  border: none;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #188ce8;\n  }\n`;\n","import { Input } from 'components/Filter/Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { AdditionalLoginRegisterFiled } from 'components/LoginForm/LoginForm.styled';\nimport { CgUser, CgPhone, CgCloseO } from 'react-icons/cg';\nimport { Button } from 'components/ContactList/ContactList.styled';\nimport { editContact } from 'redux/contacts/operations';\nimport { useEffect, useState } from 'react';\nimport { BtnClose, Form, Label, Modal, Overlay } from './EditForm.styled';\n\nexport const EditForm = ({ contactId, name, number, isCloseModal }) => {\n  const dispatch = useDispatch();\n  const [userName, setUserName] = useState(name);\n  const [userNumber, setUserNumber] = useState(number);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'number' ? setUserNumber(value) : setUserName(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(editContact({ contactId, userName, userNumber }));\n\n    isCloseModal();\n  };\n\n  useEffect(() => {\n    const handleClose = e => {\n      if (e.key === 'Escape') {\n        isCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleClose);\n\n    return () => window.removeEventListener('keydown', handleClose);\n  }, [isCloseModal]);\n\n  const handleCloseBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      isCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleCloseBackdrop}>\n      <Modal>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <AdditionalLoginRegisterFiled>\n              <CgUser size=\"18\" />\n              Name\n            </AdditionalLoginRegisterFiled>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder={name}\n              value={userName}\n              onChange={handleChange}\n              title=\"Field can't be empty\"\n              autoComplete=\"off\"\n              required\n            />\n          </Label>\n          <Label>\n            <AdditionalLoginRegisterFiled>\n              <CgPhone size=\"18\" />\n              Number\n            </AdditionalLoginRegisterFiled>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder={number}\n              value={userNumber}\n              onChange={handleChange}\n              title=\"Field can't be empty\"\n              autoComplete=\"off\"\n              required\n            />\n          </Label>\n          <BtnClose type=\"button\" onClick={isCloseModal}>\n            <CgCloseO size=\"18\" />\n          </BtnClose>\n          <Button type=\"submit\">Edit</Button>\n        </Form>\n      </Modal>\n    </Overlay>\n  );\n};\n","import { Text } from 'components/ContactList/ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    const filterText = e.target.value.trim();\n    dispatch(setFilter(filterText));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" value={filter} onChange={handleFilter} />\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const getFilteredContacts = useSelector(selectFilteredContacts);\n  const [userName, setUserName] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n  const [contactId, setContactId] = useState('');\n  const [isModal, setIsModal] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isOpenModal = (name, number, id) => {\n    setIsModal(true);\n    setUserName(name);\n    setUserNumber(number);\n    setContactId(id);\n  };\n\n  const isCloseModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <>\n      <Helmet>Contacts</Helmet>\n      <ContactForm />\n\n      {isLoading && <Loader />}\n\n      {contacts.length !== 0 && (\n        <div>\n          <Filter />\n          {getFilteredContacts.length !== 0 && (\n            <ContactList isOpenModal={isOpenModal} />\n          )}\n        </div>\n      )}\n\n      {error && <b style={{ color: 'red' }}>{error}</b>}\n\n      {isModal && (\n        <EditForm\n          name={userName}\n          number={userNumber}\n          contactId={contactId}\n          isCloseModal={isCloseModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormikForm","ErrorMessage","FormikErrorMessage","Field","FormikField","Label","Button","AdditionalFormFiled","Input","AdditionalLoginRegisterFiled","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","name","toLowerCase","includes","InputSchema","Yup","shape","required","number","ContactForm","dispatch","useDispatch","useSelector","onAddContact","refName","trim","refNumber","dublicate","find","contact","Boolean","isDublicate","alert","addContact","initialValues","validationSchema","onSubmit","values","resetForm","size","type","pattern","title","autoComplete","component","style","fill","verticalAlign","marginLeft","ContactList","isOpenModal","filteredContacts","useEffect","fetchContacts","map","id","disabled","onClick","contactId","deleteContact","Overlay","Modal","BtnClose","EditForm","isCloseModal","useState","userName","setUserName","userNumber","setUserNumber","handleChange","e","currentTarget","value","handleClose","key","window","addEventListener","removeEventListener","target","preventDefault","editContact","I","placeholder","onChange","Filter","filterText","setFilter","getFilteredContacts","setContactId","isModal","setIsModal","Helmet","Loader","length","color"],"sourceRoot":""}